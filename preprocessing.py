# -*- coding: utf-8 -*-
"""preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_reghh3Rxuo0ZEVtGqr2vhlVSFaZL0-S
"""

# src/preprocessing.py

import pandas as pd
from sklearn.preprocessing import LabelEncoder, StandardScaler

def load_and_preprocess_data(filepath):
    df = pd.read_csv(filepath)

    # Encode categorical features
    le = LabelEncoder()
    categorical_features = ['gender', 'Partner', 'Dependents', 'PhoneService', 'MultipleLines',
                             'InternetService', 'OnlineSecurity', 'OnlineBackup', 'DeviceProtection',
                             'TechSupport', 'StreamingTV', 'StreamingMovies', 'Contract',
                             'PaperlessBilling', 'PaymentMethod']

    for col in categorical_features:
        df[col] = le.fit_transform(df[col])

    # Handle missing TotalCharges
    if df['TotalCharges'].dtype == 'object':
        df['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')
        df['TotalCharges'].fillna(df['TotalCharges'].median(), inplace=True)

    # Feature scaling
    scaler = StandardScaler()
    scaled_features = ['tenure', 'MonthlyCharges', 'TotalCharges']
    df[scaled_features] = scaler.fit_transform(df[scaled_features])

    # Create new tenure bucket feature
    def tenure_bucket(tenure):
        if tenure <= 12:
            return '0-12 months'
        elif tenure <= 48:
            return '13-48 months'
        else:
            return '49+ months'

    df['tenure_bucket'] = df['tenure'].apply(tenure_bucket)
    df['tenure_bucket'] = le.fit_transform(df['tenure_bucket'])

    return df